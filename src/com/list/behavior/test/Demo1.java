package com.list.behavior.test;

import java.util.ArrayList;
import java.util.List;

/**
 * 需求场景
 * 关于模拟行为里面的对List的处理操作
 * @author zhengYu
 *
 */
public class Demo1 {
	public static void main(String[] args) {
		System.out.println("模拟psafety的行为，关于异常行为的List的处理!");
		
		/***
		 * 第一：模拟一些数据哈 （不考虑数据为空的情况哈）
		 * 
		 * 
		 * 3	13508295760	15281563483
4	13508295760	13568683894
5	13508295760	18190226006
6	13508295760	15082305186
7	15984732660	15281596055
8	15984732660	15281522082
9	15984732660	15281596055
10	13508298370	18383666524
11	13508298370	18383666524
12	13508298370	18383666524
13	13508298370	18783648860
14	13518448530	18783638613
		 */
		List list = new ArrayList<>();  
		list.add("13508295760+13990463001");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13508295760+13568683894");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13508295760+15082305186");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13508295760+13990463001");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13508295760+13990463001");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("15082305186+18783638613");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("18783648860+15984732660");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13518448530+15984732660");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13518448530+13508298370");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13508295760+15082305186");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13508298370+15984732660");  //模拟主叫和被叫，中间通过+来连接哈
		list.add("13568683894+13568683894");  //模拟主叫和被叫，中间通过+来连接哈
		
		
		/***
		 * 得到只打不接 ，这里我们定义 a - >b （a给b打电话打了三次及其以上，当时b一次都没有给a打电话）
		 * 这里我们得到的是全局变量的数据哈 （也就是说得到所有的哈）
		 * 
		 * 第一步，应该是得到上面的数据 eg:（类似于13508295760+13990463001 这样的一条数据哈，我们可以加起来哈）
		 * 
		 * 首先我得到的是重复了三次的数据哈，这个数据是处理其他数据的基础表哈，只有根据这个表，才有办法去处理其他的表哈(到时候才来出来 这个之间的关系哈)
		 */
        String temp = "";
        for (int i = 0; i < list.size() - 1; i++)
        {
            temp = (String) list.get(i);  //首先得到第一个数
            for (int j = i + 1; j < list.size(); j++)
            {
                if (temp.equals(list.get(j)))  //
                {
                    //System.out.println("第" + (i + 1) + "个跟第" + (j + 1) + "个重复，值是：" + temp);
                	
                }
            }
        }
		

	}
}
